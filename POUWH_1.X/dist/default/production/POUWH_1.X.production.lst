

Microchip Technology PIC LITE Macro Assembler V1.43 build -156212558 
                                                                                               Mon Mar 26 12:03:58 2018

Microchip Technology Omniscient Code Generator v1.43 (Free mode) build 201707250354
     1                           	processor	12F1571
     2                           	opt	pw 120
     3                           	opt	lm
     4                           	psect	nvCOMMON,global,class=COMMON,space=1,delta=1
     5                           	psect	cinit,global,class=CODE,merge=1,delta=2
     6                           	psect	bssCOMMON,global,class=COMMON,space=1,delta=1
     7                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1
     8                           	psect	maintext,global,class=CODE,merge=1,split=1,delta=2
     9                           	psect	text1,local,class=CODE,merge=1,delta=2
    10                           	psect	text2,local,class=CODE,merge=1,delta=2
    11                           	psect	text3,local,class=CODE,merge=1,delta=2
    12                           	psect	text4,local,class=CODE,merge=1,delta=2
    13                           	psect	text5,local,class=CODE,merge=1,delta=2
    14                           	dabs	1,0x7E,2
    15  0000                     
    16                           ; Version 1.43
    17                           ; Generated 25/07/2017 GMT
    18                           ; 
    19                           ; Copyright Â© 2017, Microchip Technology Inc. and its subsidiaries ("Microchip")
    20                           ; All rights reserved.
    21                           ; 
    22                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    23                           ; 
    24                           ; Redistribution and use in source and binary forms, with or without modification, are
    25                           ; permitted provided that the following conditions are met:
    26                           ; 
    27                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    28                           ;        conditions and the following disclaimer.
    29                           ; 
    30                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    31                           ;        of conditions and the following disclaimer in the documentation and/or other
    32                           ;        materials provided with the distribution.
    33                           ; 
    34                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    35                           ;        software without specific prior written permission.
    36                           ; 
    37                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    38                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    39                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    40                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    41                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    42                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    43                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    44                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    45                           ; 
    46                           ; 
    47                           ; Code-generator required, PIC12F1571 Definitions
    48                           ; 
    49                           ; SFR Addresses
    50  0000                     	;# 
    51  0001                     	;# 
    52  0002                     	;# 
    53  0003                     	;# 
    54  0004                     	;# 
    55  0005                     	;# 
    56  0006                     	;# 
    57  0007                     	;# 
    58  0008                     	;# 
    59  0009                     	;# 
    60  000A                     	;# 
    61  000B                     	;# 
    62  000C                     	;# 
    63  0011                     	;# 
    64  0012                     	;# 
    65  0013                     	;# 
    66  0015                     	;# 
    67  0016                     	;# 
    68  0016                     	;# 
    69  0017                     	;# 
    70  0018                     	;# 
    71  0019                     	;# 
    72  001A                     	;# 
    73  001B                     	;# 
    74  001C                     	;# 
    75  008C                     	;# 
    76  0091                     	;# 
    77  0092                     	;# 
    78  0093                     	;# 
    79  0095                     	;# 
    80  0096                     	;# 
    81  0097                     	;# 
    82  0098                     	;# 
    83  0099                     	;# 
    84  009A                     	;# 
    85  009B                     	;# 
    86  009B                     	;# 
    87  009C                     	;# 
    88  009D                     	;# 
    89  009E                     	;# 
    90  009F                     	;# 
    91  010C                     	;# 
    92  0111                     	;# 
    93  0112                     	;# 
    94  0115                     	;# 
    95  0116                     	;# 
    96  0117                     	;# 
    97  0118                     	;# 
    98  0119                     	;# 
    99  011D                     	;# 
   100  011D                     	;# 
   101  018C                     	;# 
   102  0191                     	;# 
   103  0191                     	;# 
   104  0192                     	;# 
   105  0193                     	;# 
   106  0193                     	;# 
   107  0194                     	;# 
   108  0195                     	;# 
   109  0196                     	;# 
   110  0197                     	;# 
   111  020C                     	;# 
   112  028C                     	;# 
   113  030C                     	;# 
   114  038C                     	;# 
   115  0391                     	;# 
   116  0392                     	;# 
   117  0393                     	;# 
   118  0691                     	;# 
   119  0692                     	;# 
   120  0693                     	;# 
   121  0694                     	;# 
   122  0695                     	;# 
   123  0D8E                     	;# 
   124  0D8F                     	;# 
   125  0D90                     	;# 
   126  0D91                     	;# 
   127  0D91                     	;# 
   128  0D92                     	;# 
   129  0D93                     	;# 
   130  0D93                     	;# 
   131  0D94                     	;# 
   132  0D95                     	;# 
   133  0D95                     	;# 
   134  0D96                     	;# 
   135  0D97                     	;# 
   136  0D97                     	;# 
   137  0D98                     	;# 
   138  0D99                     	;# 
   139  0D99                     	;# 
   140  0D9A                     	;# 
   141  0D9B                     	;# 
   142  0D9C                     	;# 
   143  0D9C                     	;# 
   144  0D9D                     	;# 
   145  0D9D                     	;# 
   146  0D9E                     	;# 
   147  0D9F                     	;# 
   148  0DA0                     	;# 
   149  0DA1                     	;# 
   150  0DA1                     	;# 
   151  0DA2                     	;# 
   152  0DA3                     	;# 
   153  0DA3                     	;# 
   154  0DA4                     	;# 
   155  0DA5                     	;# 
   156  0DA5                     	;# 
   157  0DA6                     	;# 
   158  0DA7                     	;# 
   159  0DA7                     	;# 
   160  0DA8                     	;# 
   161  0DA9                     	;# 
   162  0DA9                     	;# 
   163  0DAA                     	;# 
   164  0DAB                     	;# 
   165  0DAC                     	;# 
   166  0DAC                     	;# 
   167  0DAD                     	;# 
   168  0DAD                     	;# 
   169  0DAE                     	;# 
   170  0DAF                     	;# 
   171  0DB0                     	;# 
   172  0DB1                     	;# 
   173  0DB1                     	;# 
   174  0DB2                     	;# 
   175  0DB3                     	;# 
   176  0DB3                     	;# 
   177  0DB4                     	;# 
   178  0DB5                     	;# 
   179  0DB5                     	;# 
   180  0DB6                     	;# 
   181  0DB7                     	;# 
   182  0DB7                     	;# 
   183  0DB8                     	;# 
   184  0DB9                     	;# 
   185  0DB9                     	;# 
   186  0DBA                     	;# 
   187  0DBB                     	;# 
   188  0DBC                     	;# 
   189  0DBC                     	;# 
   190  0DBD                     	;# 
   191  0DBD                     	;# 
   192  0DBE                     	;# 
   193  0DBF                     	;# 
   194  0DC0                     	;# 
   195  0FE4                     	;# 
   196  0FE5                     	;# 
   197  0FE6                     	;# 
   198  0FE7                     	;# 
   199  0FE8                     	;# 
   200  0FE8                     	;# 
   201  0FE9                     	;# 
   202  0FEA                     	;# 
   203  0FEA                     	;# 
   204  0FEB                     	;# 
   205  0FED                     	;# 
   206  0FEE                     	;# 
   207  0FEE                     	;# 
   208  0FEF                     	;# 
   209                           
   210                           	psect	nvCOMMON
   211  0079                     __pnvCOMMON:	
   212  0079                     _adc:	
   213  0079                     	ds	2
   214  000C                     _PORTA	set	12
   215  0062                     _RA2	set	98
   216  0065                     _RA5	set	101
   217  009B                     _ADRESL	set	155
   218  009C                     _ADRESH	set	156
   219  009D                     _ADCON0	set	157
   220  009E                     _ADCON1	set	158
   221  0099                     _OSCCON	set	153
   222  008C                     _TRISA	set	140
   223  04E9                     _GO_nDONE	set	1257
   224  018C                     _ANSELA	set	396
   225                           
   226                           ; #config settings
   227  0000                     
   228                           	psect	cinit
   229  03FA                     start_initialization:	
   230  03FA                     __initialization:	
   231                           
   232                           ; Clear objects allocated to COMMON
   233  03FA  01F5               	clrf	__pbssCOMMON& (0+127)
   234  03FB  01F6               	clrf	(__pbssCOMMON+1)& (0+127)
   235  03FC  01F7               	clrf	(__pbssCOMMON+2)& (0+127)
   236  03FD  01F8               	clrf	(__pbssCOMMON+3)& (0+127)
   237  03FE                     end_of_initialization:	
   238                           ;End of C runtime variable initialization code
   239                           
   240  03FE                     __end_of__initialization:	
   241  03FE  0020               	movlb	0
   242  03FF  2B7F               	ljmp	_main	;jump to C main() function
   243                           
   244                           	psect	bssCOMMON
   245  0075                     __pbssCOMMON:	
   246  0075                     _ADCL:	
   247  0075                     	ds	2
   248  0077                     _ADCH:	
   249  0077                     	ds	2
   250                           
   251                           	psect	cstackCOMMON
   252  0070                     __pcstackCOMMON:	
   253  0070                     ?_initializers:	
   254  0070                     ??_initializers:	
   255                           ; 1 bytes @ 0x0
   256                           
   257  0070                     ?_ADC_Init:	
   258                           ; 1 bytes @ 0x0
   259                           
   260  0070                     ??_ADC_Init:	
   261                           ; 1 bytes @ 0x0
   262                           
   263  0070                     ?_blink_LED_F:	
   264                           ; 1 bytes @ 0x0
   265                           
   266  0070                     ??_blink_LED_F:	
   267                           ; 1 bytes @ 0x0
   268                           
   269  0070                     ?_blink_LED_S:	
   270                           ; 1 bytes @ 0x0
   271                           
   272  0070                     ??_blink_LED_S:	
   273                           ; 1 bytes @ 0x0
   274                           
   275  0070                     ?_main:	
   276                           ; 1 bytes @ 0x0
   277                           
   278  0070                     ?_ADC1_Read:	
   279                           ; 1 bytes @ 0x0
   280                           
   281                           
   282                           ; 2 bytes @ 0x0
   283  0070                     	ds	2
   284  0072                     ??_ADC1_Read:	
   285                           
   286                           ; 1 bytes @ 0x2
   287  0072                     	ds	2
   288  0074                     _ADC1_Read$67:	
   289                           
   290                           ; 1 bytes @ 0x4
   291  0074                     	ds	1
   292  0075                     ??_main:	
   293                           
   294                           	psect	maintext
   295  037F                     __pmaintext:	
   296                           ; 1 bytes @ 0x5
   297 ;;
   298 ;;Main: autosize = 0, tempsize = 0, incstack = 0, save=0
   299 ;;
   300 ;; *************** function _main *****************
   301 ;; Defined at:
   302 ;;		line 53 in file "main.c"
   303 ;; Parameters:    Size  Location     Type
   304 ;;		None
   305 ;; Auto vars:     Size  Location     Type
   306 ;;		None
   307 ;; Return value:  Size  Location     Type
   308 ;;                  1    wreg      void 
   309 ;; Registers used:
   310 ;;		wreg, status,2, status,0, pclath, cstack
   311 ;; Tracked objects:
   312 ;;		On entry : B1F/0
   313 ;;		On exit  : 0/0
   314 ;;		Unchanged: 0/0
   315 ;; Data sizes:     COMMON   BANK0   BANK1
   316 ;;      Params:         0       0       0
   317 ;;      Locals:         0       0       0
   318 ;;      Temps:          0       0       0
   319 ;;      Totals:         0       0       0
   320 ;;Total ram usage:        0 bytes
   321 ;; Hardware stack levels required when called:    1
   322 ;; This function calls:
   323 ;;		_ADC1_Read
   324 ;;		_ADC_Init
   325 ;;		_blink_LED_F
   326 ;;		_blink_LED_S
   327 ;;		_initializers
   328 ;; This function is called by:
   329 ;;		Startup code after reset
   330 ;; This function uses a non-reentrant model
   331 ;;
   332                           
   333                           
   334                           ;psect for function _main
   335  037F                     _main:	
   336                           
   337                           ;main.c: 56: initializers();
   338                           
   339                           ;incstack = 0
   340                           ; Regs used in _main: [wreg+status,2+status,0+pclath+cstack]
   341  037F  2373               	fcall	_initializers
   342                           
   343                           ;main.c: 57: ADC_Init();
   344  0380  236F               	fcall	_ADC_Init
   345  0381  2B83               	goto	l45
   346  0382                     l579:	
   347                           
   348                           ;main.c: 68: blink_LED_F();
   349  0382  2391               	fcall	_blink_LED_F
   350  0383                     l45:	
   351                           ;main.c: 59: while(1)
   352                           
   353                           ;main.c: 69: }
   354                           
   355                           
   356                           ;main.c: 60: {
   357                           ;main.c: 62: adc = ADC1_Read();
   358  0383  23BF               	fcall	_ADC1_Read
   359  0384  0871               	movf	?_ADC1_Read+1,w
   360  0385  00FA               	movwf	_adc+1
   361  0386  0870               	movf	?_ADC1_Read,w
   362  0387  00F9               	movwf	_adc
   363                           
   364                           ;main.c: 66: if(adc <= 255){
   365  0388  3001               	movlw	1
   366  0389  027A               	subwf	_adc+1,w
   367  038A  3000               	movlw	0
   368  038B  1903               	skipnz
   369  038C  0279               	subwf	_adc,w
   370  038D  1C03               	btfss	3,0
   371  038E  2B82               	goto	l579
   372                           
   373                           ;main.c: 70: else{
   374                           ;main.c: 72: blink_LED_S();
   375  038F  23A4               	fcall	_blink_LED_S
   376  0390  2B83               	goto	l45
   377  0391                     __end_of_main:	
   378                           ;main.c: 73: }
   379                           ;main.c: 75: }
   380                           ;main.c: 76: return;
   381                           
   382                           
   383                           	psect	text1
   384  0373                     __ptext1:	
   385 ;; *************** function _initializers *****************
   386 ;; Defined at:
   387 ;;		line 83 in file "main.c"
   388 ;; Parameters:    Size  Location     Type
   389 ;;		None
   390 ;; Auto vars:     Size  Location     Type
   391 ;;		None
   392 ;; Return value:  Size  Location     Type
   393 ;;                  1    wreg      void 
   394 ;; Registers used:
   395 ;;		wreg, status,2
   396 ;; Tracked objects:
   397 ;;		On entry : 0/0
   398 ;;		On exit  : 0/0
   399 ;;		Unchanged: 0/0
   400 ;; Data sizes:     COMMON   BANK0   BANK1
   401 ;;      Params:         0       0       0
   402 ;;      Locals:         0       0       0
   403 ;;      Temps:          0       0       0
   404 ;;      Totals:         0       0       0
   405 ;;Total ram usage:        0 bytes
   406 ;; Hardware stack levels used:    1
   407 ;; This function calls:
   408 ;;		Nothing
   409 ;; This function is called by:
   410 ;;		_main
   411 ;; This function uses a non-reentrant model
   412 ;;
   413                           
   414                           
   415                           ;psect for function _initializers
   416  0373                     _initializers:	
   417                           
   418                           ;main.c: 87: TRISA = 0x1B;
   419                           
   420                           ;incstack = 0
   421                           ; Regs used in _initializers: [wreg+status,2]
   422  0373  301B               	movlw	27
   423  0374  0021               	movlb	1	; select bank1
   424  0375  008C               	movwf	12	;volatile
   425                           
   426                           ;main.c: 89: ANSELA = 0x12;
   427  0376  3012               	movlw	18
   428  0377  0023               	movlb	3	; select bank3
   429  0378  008C               	movwf	12	;volatile
   430                           
   431                           ;main.c: 91: PORTA = 0X00;
   432  0379  0020               	movlb	0	; select bank0
   433  037A  018C               	clrf	12	;volatile
   434                           
   435                           ;main.c: 93: OSCCON = 0x6A;
   436  037B  306A               	movlw	106
   437  037C  0021               	movlb	1	; select bank1
   438  037D  0099               	movwf	25	;volatile
   439  037E  0008               	return
   440  037F                     __end_of_initializers:	
   441                           
   442                           	psect	text2
   443  03A4                     __ptext2:	
   444 ;; *************** function _blink_LED_S *****************
   445 ;; Defined at:
   446 ;;		line 175 in file "main.c"
   447 ;; Parameters:    Size  Location     Type
   448 ;;		None
   449 ;; Auto vars:     Size  Location     Type
   450 ;;		None
   451 ;; Return value:  Size  Location     Type
   452 ;;                  1    wreg      void 
   453 ;; Registers used:
   454 ;;		wreg
   455 ;; Tracked objects:
   456 ;;		On entry : 0/0
   457 ;;		On exit  : 0/0
   458 ;;		Unchanged: 0/0
   459 ;; Data sizes:     COMMON   BANK0   BANK1
   460 ;;      Params:         0       0       0
   461 ;;      Locals:         0       0       0
   462 ;;      Temps:          2       0       0
   463 ;;      Totals:         2       0       0
   464 ;;Total ram usage:        2 bytes
   465 ;; Hardware stack levels used:    1
   466 ;; This function calls:
   467 ;;		Nothing
   468 ;; This function is called by:
   469 ;;		_main
   470 ;; This function uses a non-reentrant model
   471 ;;
   472                           
   473                           
   474                           ;psect for function _blink_LED_S
   475  03A4                     _blink_LED_S:	
   476                           
   477                           ;main.c: 177: RA2 = 1;
   478                           
   479                           ;incstack = 0
   480                           ; Regs used in _blink_LED_S: [wreg]
   481  03A4  0020               	movlb	0	; select bank0
   482  03A5  150C               	bsf	12,2	;volatile
   483                           
   484                           ;main.c: 178: _delay((unsigned long)((500)*(4000000/4000.0)));
   485  03A6  3003               	movlw	3
   486  03A7  00F1               	movwf	??_blink_LED_S+1
   487  03A8  308A               	movlw	138
   488  03A9  00F0               	movwf	??_blink_LED_S
   489  03AA  3056               	movlw	86
   490  03AB                     u127:	
   491  03AB  0B89               	decfsz	9,f
   492  03AC  2BAB               	goto	u127
   493  03AD  0BF0               	decfsz	??_blink_LED_S,f
   494  03AE  2BAB               	goto	u127
   495  03AF  0BF1               	decfsz	??_blink_LED_S+1,f
   496  03B0  2BAB               	goto	u127
   497                           
   498                           ;main.c: 179: RA2 = 0;
   499  03B1  0020               	movlb	0	; select bank0
   500  03B2  110C               	bcf	12,2	;volatile
   501                           
   502                           ;main.c: 180: _delay((unsigned long)((500)*(4000000/4000.0)));
   503  03B3  3003               	movlw	3
   504  03B4  00F1               	movwf	??_blink_LED_S+1
   505  03B5  308A               	movlw	138
   506  03B6  00F0               	movwf	??_blink_LED_S
   507  03B7  3056               	movlw	86
   508  03B8                     u137:	
   509  03B8  0B89               	decfsz	9,f
   510  03B9  2BB8               	goto	u137
   511  03BA  0BF0               	decfsz	??_blink_LED_S,f
   512  03BB  2BB8               	goto	u137
   513  03BC  0BF1               	decfsz	??_blink_LED_S+1,f
   514  03BD  2BB8               	goto	u137
   515  03BE  0008               	return
   516  03BF                     __end_of_blink_LED_S:	
   517                           
   518                           	psect	text3
   519  0391                     __ptext3:	
   520 ;; *************** function _blink_LED_F *****************
   521 ;; Defined at:
   522 ;;		line 167 in file "main.c"
   523 ;; Parameters:    Size  Location     Type
   524 ;;		None
   525 ;; Auto vars:     Size  Location     Type
   526 ;;		None
   527 ;; Return value:  Size  Location     Type
   528 ;;                  1    wreg      void 
   529 ;; Registers used:
   530 ;;		wreg
   531 ;; Tracked objects:
   532 ;;		On entry : 0/0
   533 ;;		On exit  : 0/0
   534 ;;		Unchanged: 0/0
   535 ;; Data sizes:     COMMON   BANK0   BANK1
   536 ;;      Params:         0       0       0
   537 ;;      Locals:         0       0       0
   538 ;;      Temps:          1       0       0
   539 ;;      Totals:         1       0       0
   540 ;;Total ram usage:        1 bytes
   541 ;; Hardware stack levels used:    1
   542 ;; This function calls:
   543 ;;		Nothing
   544 ;; This function is called by:
   545 ;;		_main
   546 ;; This function uses a non-reentrant model
   547 ;;
   548                           
   549                           
   550                           ;psect for function _blink_LED_F
   551  0391                     _blink_LED_F:	
   552                           
   553                           ;main.c: 169: RA2 = 1;
   554                           
   555                           ;incstack = 0
   556                           ; Regs used in _blink_LED_F: [wreg]
   557  0391  0020               	movlb	0	; select bank0
   558  0392  150C               	bsf	12,2	;volatile
   559                           
   560                           ;main.c: 170: _delay((unsigned long)((100)*(4000000/4000.0)));
   561  0393  3082               	movlw	130
   562  0394  00F0               	movwf	??_blink_LED_F
   563  0395  30DE               	movlw	222
   564  0396                     u147:	
   565  0396  0B89               	decfsz	9,f
   566  0397  2B96               	goto	u147
   567  0398  0BF0               	decfsz	??_blink_LED_F,f
   568  0399  2B96               	goto	u147
   569                           
   570                           ;main.c: 171: RA2 = 0;
   571  039A  0020               	movlb	0	; select bank0
   572  039B  110C               	bcf	12,2	;volatile
   573                           
   574                           ;main.c: 172: _delay((unsigned long)((100)*(4000000/4000.0)));
   575  039C  3082               	movlw	130
   576  039D  00F0               	movwf	??_blink_LED_F
   577  039E  30DE               	movlw	222
   578  039F                     u157:	
   579  039F  0B89               	decfsz	9,f
   580  03A0  2B9F               	goto	u157
   581  03A1  0BF0               	decfsz	??_blink_LED_F,f
   582  03A2  2B9F               	goto	u157
   583  03A3  0008               	return
   584  03A4                     __end_of_blink_LED_F:	
   585                           
   586                           	psect	text4
   587  036F                     __ptext4:	
   588 ;; *************** function _ADC_Init *****************
   589 ;; Defined at:
   590 ;;		line 97 in file "main.c"
   591 ;; Parameters:    Size  Location     Type
   592 ;;		None
   593 ;; Auto vars:     Size  Location     Type
   594 ;;		None
   595 ;; Return value:  Size  Location     Type
   596 ;;                  1    wreg      void 
   597 ;; Registers used:
   598 ;;		wreg
   599 ;; Tracked objects:
   600 ;;		On entry : 0/0
   601 ;;		On exit  : 0/0
   602 ;;		Unchanged: 0/0
   603 ;; Data sizes:     COMMON   BANK0   BANK1
   604 ;;      Params:         0       0       0
   605 ;;      Locals:         0       0       0
   606 ;;      Temps:          0       0       0
   607 ;;      Totals:         0       0       0
   608 ;;Total ram usage:        0 bytes
   609 ;; Hardware stack levels used:    1
   610 ;; This function calls:
   611 ;;		Nothing
   612 ;; This function is called by:
   613 ;;		_main
   614 ;; This function uses a non-reentrant model
   615 ;;
   616                           
   617                           
   618                           ;psect for function _ADC_Init
   619  036F                     _ADC_Init:	
   620                           
   621                           ;main.c: 104: ADCON1 = 0x80;
   622                           
   623                           ;incstack = 0
   624                           ; Regs used in _ADC_Init: [wreg]
   625  036F  3080               	movlw	128
   626  0370  0021               	movlb	1	; select bank1
   627  0371  009E               	movwf	30	;volatile
   628  0372  0008               	return
   629  0373                     __end_of_ADC_Init:	
   630                           
   631                           	psect	text5
   632  03BF                     __ptext5:	
   633 ;; *************** function _ADC1_Read *****************
   634 ;; Defined at:
   635 ;;		line 108 in file "main.c"
   636 ;; Parameters:    Size  Location     Type
   637 ;;		None
   638 ;; Auto vars:     Size  Location     Type
   639 ;;		None
   640 ;; Return value:  Size  Location     Type
   641 ;;                  2    0[COMMON] unsigned int 
   642 ;; Registers used:
   643 ;;		wreg, status,2, status,0
   644 ;; Tracked objects:
   645 ;;		On entry : 0/0
   646 ;;		On exit  : 0/0
   647 ;;		Unchanged: 0/0
   648 ;; Data sizes:     COMMON   BANK0   BANK1
   649 ;;      Params:         2       0       0
   650 ;;      Locals:         1       0       0
   651 ;;      Temps:          2       0       0
   652 ;;      Totals:         5       0       0
   653 ;;Total ram usage:        5 bytes
   654 ;; Hardware stack levels used:    1
   655 ;; This function calls:
   656 ;;		Nothing
   657 ;; This function is called by:
   658 ;;		_main
   659 ;; This function uses a non-reentrant model
   660 ;;
   661                           
   662                           
   663                           ;psect for function _ADC1_Read
   664  03BF                     _ADC1_Read:	
   665                           
   666                           ;main.c: 110: ADCON0 = 0x05;
   667                           
   668                           ;incstack = 0
   669                           ; Regs used in _ADC1_Read: [wreg+status,2+status,0]
   670  03BF  3005               	movlw	5
   671  03C0  0021               	movlb	1	; select bank1
   672  03C1  009D               	movwf	29	;volatile
   673                           
   674                           ;main.c: 111: _delay((unsigned long)((2)*(4000000/4000.0)));
   675  03C2  3003               	movlw	3
   676  03C3  00F2               	movwf	??_ADC1_Read
   677  03C4  3098               	movlw	152
   678  03C5                     u167:	
   679  03C5  0B89               	decfsz	9,f
   680  03C6  2BC5               	goto	u167
   681  03C7  0BF2               	decfsz	??_ADC1_Read,f
   682  03C8  2BC5               	goto	u167
   683                           
   684                           ;main.c: 113: GO_nDONE = 1;
   685  03C9  0021               	movlb	1	; select bank1
   686  03CA  149D               	bsf	29,1	;volatile
   687  03CB                     l59:	
   688                           ;main.c: 114: while(GO_nDONE);
   689                           
   690  03CB  189D               	btfsc	29,1	;volatile
   691  03CC  2BCB               	goto	l59
   692                           
   693                           ;main.c: 118: ADCH = ADRESH;
   694  03CD  081C               	movf	28,w	;volatile
   695  03CE  00F2               	movwf	??_ADC1_Read
   696  03CF  01F3               	clrf	??_ADC1_Read+1
   697  03D0  0872               	movf	??_ADC1_Read,w
   698  03D1  00F7               	movwf	_ADCH
   699  03D2  0873               	movf	??_ADC1_Read+1,w
   700  03D3  00F8               	movwf	_ADCH+1
   701                           
   702                           ;main.c: 119: ADCL = ADRESL;
   703  03D4  081B               	movf	27,w	;volatile
   704  03D5  00F2               	movwf	??_ADC1_Read
   705  03D6  01F3               	clrf	??_ADC1_Read+1
   706  03D7  0872               	movf	??_ADC1_Read,w
   707  03D8  00F5               	movwf	_ADCL
   708  03D9  0873               	movf	??_ADC1_Read+1,w
   709  03DA  00F6               	movwf	_ADCL+1
   710                           
   711                           ;main.c: 120: ADCH = ADRESH && 0x03;
   712  03DB  01F4               	clrf	_ADC1_Read$67
   713  03DC  081C               	movf	28,w	;volatile
   714  03DD  1903               	btfsc	3,2
   715  03DE  2BE1               	goto	l567
   716  03DF  01F4               	clrf	_ADC1_Read$67
   717  03E0  0AF4               	incf	_ADC1_Read$67,f
   718  03E1                     l567:	
   719  03E1  0874               	movf	_ADC1_Read$67,w
   720  03E2  00F2               	movwf	??_ADC1_Read
   721  03E3  01F3               	clrf	??_ADC1_Read+1
   722  03E4  0872               	movf	??_ADC1_Read,w
   723  03E5  00F7               	movwf	_ADCH
   724  03E6  0873               	movf	??_ADC1_Read+1,w
   725  03E7  00F8               	movwf	_ADCH+1
   726                           
   727                           ;main.c: 121: ADCH = (ADCH<<8);
   728  03E8  0877               	movf	_ADCH,w
   729  03E9  00F3               	movwf	??_ADC1_Read+1
   730  03EA  01F2               	clrf	??_ADC1_Read
   731  03EB  0872               	movf	??_ADC1_Read,w
   732  03EC  00F7               	movwf	_ADCH
   733  03ED  0873               	movf	??_ADC1_Read+1,w
   734  03EE  00F8               	movwf	_ADCH+1
   735                           
   736                           ;main.c: 122: ADCH = ADCH + ADCL;
   737  03EF  0875               	movf	_ADCL,w
   738  03F0  0777               	addwf	_ADCH,w
   739  03F1  00F7               	movwf	_ADCH
   740  03F2  0876               	movf	_ADCL+1,w
   741  03F3  3D78               	addwfc	_ADCH+1,w
   742  03F4  00F8               	movwf	_ADCH+1
   743                           
   744                           ;main.c: 123: return ADCH;
   745  03F5  0878               	movf	_ADCH+1,w
   746  03F6  00F1               	movwf	?_ADC1_Read+1
   747  03F7  0877               	movf	_ADCH,w
   748  03F8  00F0               	movwf	?_ADC1_Read
   749  03F9  0008               	return
   750  03FA                     __end_of_ADC1_Read:	
   751  007E                     btemp	set	126	;btemp
   752  007E                     wtemp0	set	126


Data Sizes:
    Strings     0
    Constant    0
    Data        0
    BSS         4
    Persistent  2
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14      5      11
    BANK0            80      0       0
    BANK1            32      0       0

Pointer List with Targets:

    None.

Critical Paths under _main in COMMON

    _main->_ADC1_Read

Critical Paths under _main in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 0     0      0      24
                          _ADC1_Read
                           _ADC_Init
                        _blink_LED_F
                        _blink_LED_S
                       _initializers
 ---------------------------------------------------------------------------------
 (1) _initializers                                         0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _blink_LED_S                                          2     2      0       0
                                              0 COMMON     2     2      0
 ---------------------------------------------------------------------------------
 (1) _blink_LED_F                                          1     1      0       0
                                              0 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 (1) _ADC_Init                                             0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _ADC1_Read                                            5     3      2      24
                                              0 COMMON     5     3      2
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 1
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _ADC1_Read
   _ADC_Init
   _blink_LED_F
   _blink_LED_S
   _initializers

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM              70      0       0       0        0.0%
NULL                 0      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
BITCOMMON            E      0       0       1        0.0%
BITSFR0              0      0       0       1        0.0%
SFR0                 0      0       0       1        0.0%
COMMON               E      5       B       2       78.6%
BITSFR1              0      0       0       2        0.0%
SFR1                 0      0       0       2        0.0%
BITSFR2              0      0       0       3        0.0%
SFR2                 0      0       0       3        0.0%
STACK                0      0       0       3        0.0%
BITSFR3              0      0       0       4        0.0%
SFR3                 0      0       0       4        0.0%
ABS                  0      0       B       4        0.0%
BITBANK0            50      0       0       5        0.0%
BITSFR4              0      0       0       5        0.0%
SFR4                 0      0       0       5        0.0%
BANK0               50      0       0       6        0.0%
BITSFR5              0      0       0       6        0.0%
SFR5                 0      0       0       6        0.0%
BITBANK1            20      0       0       7        0.0%
BITSFR6              0      0       0       7        0.0%
SFR6                 0      0       0       7        0.0%
BANK1               20      0       0       8        0.0%
BITSFR7              0      0       0       8        0.0%
SFR7                 0      0       0       8        0.0%
BITSFR8              0      0       0       9        0.0%
SFR8                 0      0       0       9        0.0%
DATA                 0      0       B       9        0.0%
BITSFR9              0      0       0      10        0.0%
SFR9                 0      0       0      10        0.0%
BITSFR10             0      0       0      11        0.0%
SFR10                0      0       0      11        0.0%
BITSFR11             0      0       0      12        0.0%
SFR11                0      0       0      12        0.0%
BITSFR12             0      0       0      13        0.0%
SFR12                0      0       0      13        0.0%
BITSFR13             0      0       0      14        0.0%
SFR13                0      0       0      14        0.0%
BITSFR14             0      0       0      15        0.0%
SFR14                0      0       0      15        0.0%
BITSFR15             0      0       0      16        0.0%
SFR15                0      0       0      16        0.0%
BITSFR16             0      0       0      17        0.0%
SFR16                0      0       0      17        0.0%
BITSFR17             0      0       0      18        0.0%
SFR17                0      0       0      18        0.0%
BITSFR18             0      0       0      19        0.0%
SFR18                0      0       0      19        0.0%
BITSFR19             0      0       0      20        0.0%
SFR19                0      0       0      20        0.0%
BITSFR20             0      0       0      21        0.0%
SFR20                0      0       0      21        0.0%
BITSFR21             0      0       0      22        0.0%
SFR21                0      0       0      22        0.0%
BITSFR22             0      0       0      23        0.0%
SFR22                0      0       0      23        0.0%
BITSFR23             0      0       0      24        0.0%
SFR23                0      0       0      24        0.0%
BITSFR24             0      0       0      25        0.0%
SFR24                0      0       0      25        0.0%
BITSFR25             0      0       0      26        0.0%
SFR25                0      0       0      26        0.0%
BITSFR26             0      0       0      27        0.0%
SFR26                0      0       0      27        0.0%
BITSFR27             0      0       0      28        0.0%
SFR27                0      0       0      28        0.0%
BITSFR28             0      0       0      29        0.0%
SFR28                0      0       0      29        0.0%
BITSFR29             0      0       0      30        0.0%
SFR29                0      0       0      30        0.0%
BITSFR30             0      0       0      31        0.0%
SFR30                0      0       0      31        0.0%
BITSFR31             0      0       0      32        0.0%
SFR31                0      0       0      32        0.0%


Microchip Technology PIC Macro Assembler V1.43 build -156212558 
Symbol Table                                                                                   Mon Mar 26 12:03:58 2018

            __CFG_CP$OFF 0000                       l45 0383                       l59 03CB  
                    l567 03E1                      l579 0382                      _RA2 0062  
                    _RA5 0065                      u127 03AB                      u137 03B8  
                    u147 0396                      u157 039F                      u167 03C5  
                    _adc 0079             __CFG_BORV$LO 0000                      wreg 0009  
           __CFG_LVP$OFF 0000                     _ADCH 0077                     _ADCL 0075  
           __CFG_WRT$OFF 0000                     _main 037F                     btemp 007E  
       __end_of_ADC_Init 0373                     start 0001            __CFG_MCLRE$ON 0000  
                  ?_main 0070            __CFG_WDTE$OFF 0000        __end_of_ADC1_Read 03FA  
                  _PORTA 000C                    _TRISA 008C           __CFG_BOREN$OFF 0000  
                  status 0003                    wtemp0 007E          __initialization 03FA  
           __end_of_main 0391     __size_of_blink_LED_F 0013     __size_of_blink_LED_S 001B  
                 ??_main 0075           __CFG_PLLEN$OFF 0000                   _ADCON0 009D  
                 _ADCON1 009E                   _ADRESH 009C                   _ADRESL 009B  
                 _ANSELA 018C                   _OSCCON 0099           __CFG_PWRTE$OFF 0000  
          ?_initializers 0070           __CFG_STVREN$ON 0000                ?_ADC_Init 0070  
__end_of__initialization 03FE           ??_initializers 0070           __pcstackCOMMON 0070  
             ??_ADC_Init 0070               __pnvCOMMON 0079               __pmaintext 037F  
              _ADC1_Read 03BF                  __ptext1 0373                  __ptext2 03A4  
                __ptext3 0391                  __ptext4 036F                  __ptext5 03BF  
   __end_of_initializers 037F               ?_ADC1_Read 0070     end_of_initialization 03FE  
          ??_blink_LED_F 0070            ??_blink_LED_S 0070         __CFG_FOSC$INTOSC 0000  
      __size_of_ADC_Init 0004      __end_of_blink_LED_F 03A4      __end_of_blink_LED_S 03BF  
    start_initialization 03FA              ??_ADC1_Read 0072         __CFG_LPBOREN$OFF 0000  
  __size_of_initializers 000C              __pbssCOMMON 0075                ___latbits 0000  
           _initializers 0373              _blink_LED_F 0391              _blink_LED_S 03A4  
               _ADC_Init 036F                 _GO_nDONE 04E9            __size_of_main 0012  
      __CFG_CLKOUTEN$OFF 0000             ?_blink_LED_F 0070             ?_blink_LED_S 0070  
           _ADC1_Read$67 0074       __size_of_ADC1_Read 003B  
